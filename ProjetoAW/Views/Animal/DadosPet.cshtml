@model ProjetoAW.Models.Animal

@{
    ViewBag.Title = "DadosPet";
}
<div>
    <h2 class="--main-title">Dados do Pet</h2>
</div>

@using (Html.BeginForm("DadosPet", "Animal", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="containerCadastro">
        <div class="cardCadastro">
            <div class="avatarCadastro">
                <img src="@ViewBag.imagem" id="preview-img" class="avatar" />
                <label id="labelFile" for="default-button"><i class="fas fa-paw"></i> Modificar imagem</label>
                <input type="file" name="file" id="default-button">
            </div>
            <div class="dadosCadastro">
                @Html.EditorFor(model => model.codAnimal, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom: 5px", @hidden="true" } })
                @Html.EditorFor(model => model.imagemAnimal, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom: 5px", @hidden="true" } })
                <div class="linha">
                    <p>@Html.LabelFor(model => model.nomeAnimal, htmlAttributes: new { @class = "control-label " }): @Html.EditorFor(model => model.nomeAnimal, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom: 5px" } })</p>
                    <p> @Html.LabelFor(model => model.codRaca, htmlAttributes: new { @class = "control-label " }): @Html.EditorFor(model => model.nomeRaca, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })</p>
                </div>

                <div class="linha">
                    <p>@Html.LabelFor(model => model.codEspecie, htmlAttributes: new { @class = "control-label " }): @Html.EditorFor(model => model.nomeEspecie, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom: 5px", @disabled = "true" } })</p>
                    <p>@Html.LabelFor(model => model.temperamento, htmlAttributes: new { @class = "control-label " }): @Html.EditorFor(model => model.temperamento, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom: 5px", @disabled = "true" } })</p>
                </div>

                <div class="linha">
                    <p> @Html.LabelFor(model => model.idade, htmlAttributes: new { @class = "control-label " }): @Html.EditorFor(model => model.idade, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom: 5px" } })</p>
                    
                    <p> @Html.LabelFor(model => model.sexo, htmlAttributes: new { @class = "control-label " }): @Html.EditorFor(model => model.sexo, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom: 5px", @disabled = "true" } })</p>
                </div>

                <div class="linha">
                    <p>@Html.LabelFor(model => model.descricaoAnimal, htmlAttributes: new { @class = "control-label " }): @Html.TextArea("descAnimal", (string)ViewBag.desc, new { @class = "form-control", placeholder = "Digite a descrição do animal", rows = "4", style = "resize:none; margin-bottom: 5px", name = "descAnimal" })</p>
                    <p> @Html.LabelFor(model => model.codPorte, htmlAttributes: new { @class = "control-label " }): @Html.EditorFor(model => model.nomePorte, new { htmlAttributes = new { @class = "form-control", @disabled = "true", @style = "margin-bottom: 5px" } })</p>
                </div>
                <div class="linhaEP">
                    <button class="btn button-a button-big button-rouded btn-success" id="EditarCP"><i class="fas fa-pencil-alt"></i> Editar Dados</button>
                </div>
                    <p>@ViewBag.Message</p>

            </div>
        </div>

    </div>
}

<script type="text/javascript">
    const wrapper = document.querySelector(".wrapper");
    const fileName = document.querySelector(".file-name");
    const defaultBtn = document.querySelector("#default-button");
    const customBtn = document.querySelector("#custom-btn");
    const cancelBtn = document.querySelector("#cancel-btn i");
    const img = document.querySelector("#preview-img");
    let regExp = /[0-9a-zA-Z\^\&\'\{\}\[\]\,\$\=\!\-\#\(\)\.\%\+\~\_ ]+$/;
    defaultBtn.addEventListener("change", function () {
        img.src = "";
        const file = this.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function () {
                const result = reader.result;
                img.src = result;
                wrapper.classList.add("active");
            }
            reader.readAsDataURL(file);
        }
        if (this.value) {
            let valueStore = this.value.match(regExp);
            fileName.textContent = valueStore;
        }
    });

</script>

