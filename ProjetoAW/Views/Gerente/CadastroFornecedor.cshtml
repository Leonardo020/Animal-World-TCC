@model ProjetoAW.Models.Fornecedor

@{
    ViewBag.Title = "CadastroFornecedor";
}

<h2>Cadastro de Fornecedor</h2>

@using (Html.BeginForm("CadastroFornecedor", "Gerente", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="containerCadastro">
        <div class="cardCadastro" style="flex-direction: column">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="linhaCenter">
                <div class="avatarCadastro">
                    <div class="container containerProd">
                        <div class="wrapper wrapperProd" style="height: 35vh">
                            <div class="image">
                                <img id="preview-img" src="" alt="">
                            </div>
                            <div id="cancel-btn">
                                <i class="fas fa-times"></i>
                            </div>
                        </div>
                        <label id="labelFile" for="default-button"><i class="fas fa-upload"></i> Escolha a imagem do fornecedor</label>
                        <input type="file" name="file" id="default-button">
                    </div>
                </div>
            </div>
            <div class="linhaCenter">
                <div class="form-group">
                    @Html.LabelFor(model => model.nomeFornecedor)
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.nomeFornecedor, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.nomeFornecedor, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emailFornecedor)
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.emailFornecedor, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emailFornecedor, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-success">Cadastrar</button>
            </div>
        </div>
    </div>
}

<script>
    const wrapper = document.querySelector(".wrapper");
    const fileName = document.querySelector(".file-name");
    const defaultBtn = document.querySelector("#default-button");
    const customBtn = document.querySelector("#custom-btn");
    const cancelBtn = document.querySelector("#cancel-btn i");
    const img = document.querySelector("#preview-img");
    let regExp = /[0-9a-zA-Z\^\&\'\{\}\[\]\,\$\=\!\-\#\(\)\.\%\+\~\_ ]+$/;
    defaultBtn.addEventListener("change", function () {
        const file = this.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function () {
                const result = reader.result;
                img.src = result;
                wrapper.classList.add("active");
            }
            cancelBtn.addEventListener("click", function () {
                img.src = "";
                wrapper.classList.remove("active");
            })
            reader.readAsDataURL(file);
        }
        if (this.value) {
            let valueStore = this.value.match(regExp);
            fileName.textContent = valueStore;
        }
    });

</script>